CREATE TABLE IF NOT EXISTS USERS
(
    ID                 BIGINT generated by default as identity primary key,
    NAME               VARCHAR(64) NOT NULL,
    EMAIL              VARCHAR(64) NOT NULL,
    CONSTRAINT unique_user_email UNIQUE (EMAIL)
);

CREATE TABLE IF NOT EXISTS CATEGORIES
(
    ID               BIGINT generated by default as identity primary key,
    NAME             VARCHAR(64) NOT NULL,
    CONSTRAINT un_category_name UNIQUE (NAME)
);

CREATE TABLE IF NOT EXISTS LOCATION
(
    ID               BIGINT generated by default as identity primary key,
    LAT              FLOAT NOT NULL,
    LON              FLOAT NOT NUll
);

CREATE TABLE IF NOT EXISTS EVENTS (
     ID                     BIGINT generated by default as identity primary key,
     ANNOTATION             VARCHAR(2000) NOT NULL,
     CATEGORY_ID            BIGINT NOT NULL,
     CREATED_ON             TIMESTAMP WITHOUT TIME ZONE NOT NULL,
     DESCRIPTION            VARCHAR(7000) NOT NULL,
     EVENT_DATE             TIMESTAMP WITHOUT TIME ZONE NOT NULL,
     INITIATOR_ID           BIGINT NOT NULL,
     LOCATION_ID            BIGINT NOT NULL,
     PAID                   BOOLEAN DEFAULT FALSE,
     PARTICIPANT_LIMIT      BIGINT DEFAULT 0,
     PUBLISHED_ON           TIMESTAMP WITHOUT TIME ZONE NOT NULL,
     REQUEST_MODERATION     BOOLEAN DEFAULT TRUE,
     EVENT_STATE            VARCHAR(25) DEFAULT 'PENDING',
     TITLE                  VARCHAR(120) NOT NULL,
     CONSTRAINT fk_events_categories FOREIGN KEY (category_id) REFERENCES CATEGORIES (id),
     CONSTRAINT fk_events_users FOREIGN KEY (initiator_id) REFERENCES USERS (id),
     CONSTRAINT fk_events_location FOREIGN KEY (location_id) REFERENCES LOCATION (id)
);

CREATE TABLE IF NOT EXISTS REQUESTS
(
    ID               BIGINT generated by default as identity primary key,
    CREATED          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    EVENT_ID         BIGINT NOT NULL,
    REQUESTER_ID     BIGINT NOT NULL,
    STATUS           VARCHAR(20) NOT NULL,
    CONSTRAINT fk_user_req foreign key (REQUESTER_ID) REFERENCES USERS(id) ON DELETE CASCADE,
    CONSTRAINT fk_event_req foreign key (EVENT_ID) REFERENCES EVENTS(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS COMPILATIONS
(
    ID               BIGINT generated by default as identity primary key,
    TITLE            VARCHAR(255) NOT NULL UNIQUE,
    PINNED           BOOLEAN default false

);

CREATE TABLE IF NOT EXISTS COMPILATION_EVENTS
(
    COMPILATION_ID               BIGINT NOT NULL,
    EVENT_ID                     BIGINT NOT NULL,
    CONSTRAINT PK_COMPILATION_EVENTS
        PRIMARY KEY (COMPILATION_ID, EVENT_ID),
    CONSTRAINT FK_COMPILATION_EVENT  FOREIGN KEY (COMPILATION_ID) REFERENCES COMPILATIONS (ID) ON DELETE CASCADE,
    CONSTRAINT FK_EVENT_COMP  FOREIGN KEY (EVENT_ID) REFERENCES EVENTS (ID) ON DELETE CASCADE

);

CREATE TABLE IF NOT EXISTS COMMENTS
(
    ID               BIGINT generated by default as identity primary key,
    CREATED          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    EVENT_ID         BIGINT NOT NULL,
    AUTHOR_ID        BIGINT NOT NULL,
    TEXT             VARCHAR(300) NOT NULL,
    CONSTRAINT fk_user_com foreign key (AUTHOR_ID) REFERENCES USERS(id) ON DELETE CASCADE,
    CONSTRAINT fk_event_com foreign key (EVENT_ID) REFERENCES EVENTS(id) ON DELETE CASCADE
);